import os

from pyrogram import filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from telegraph import upload_file

from Spotify_Music import app


@app.on_message(filters.command(["tgm", "tgt", "telegraph", "tl"]))
async def get_link_group(client, message):
    if not message.reply_to_message:
        return await message.reply_text(
            "·¥ò ü·¥á·¥Äs·¥á  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥á·¥Ö…™·¥Ä ·¥õ·¥è ·¥ú·¥ò ü·¥è·¥Ä·¥Ö ·¥è…¥ ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú"
        )
    try:
        text = await message.reply("·¥ò Ä·¥è·¥Ñ·¥áss…™…¥…¢...")

        async def progress(current, total):
            await text.edit_text(f"üì• ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö…™…¥…¢... {current * 100 / total:.1f}%")

        try:
            local_path = await message.reply_to_message.download( progress=progress
            )
            await text.edit_text("üì§ ·¥ú·¥ò ü·¥è·¥Ä·¥Ö…™…¥…¢ ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú...")
            upload_path = upload_file(local_path)
            await text.edit_text(
                f"üåê | [·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú  ü…™…¥·¥ã](https://telegra.ph{upload_path[0]})",
                reply_markup=InlineKeyboardMarkup(
                    [
                        [
                            InlineKeyboardButton(
                                "·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú  ü…™…¥·¥ã",
                                url=f"https://telegra.ph{upload_path[0]}",
                            )
                        ]
                    ]
                ),
            )
            try:
                os.remove(local_path)
            except Exception:
               pass
        except Exception as e:
            await text.edit_text(f"‚ùå |“ì…™ ü·¥á ·¥ú·¥ò ü·¥è·¥Ä·¥Ö “ì·¥Ä…™ ü·¥á·¥Ö \n\n<i> Ä·¥á·¥Äs·¥è…¥: {e}</i>")
            try:
                os.remove(local_path)
            except Exception:
               pass
            return
    except Exception:
        pass

__HELP__ = """
**·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú ·¥ú·¥ò ü·¥è·¥Ä·¥Ö  ô·¥è·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös**

·¥ús·¥á ·¥õ ú·¥ás·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös ·¥õ·¥è ·¥ú·¥ò ü·¥è·¥Ä·¥Ö ·¥ç·¥á·¥Ö…™·¥Ä ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú:

- `/tgm`: ·¥ú·¥ò ü·¥è·¥Ä·¥Ö  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥ç·¥á·¥Ö…™·¥Ä ·¥õ·¥è ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú.
- `/tgt`: s·¥Ä·¥ç·¥á ·¥Äs `/tgm`.
- `/telegraph`: s·¥Ä·¥ç·¥á ·¥Äs `/tgm`.
- `/tl`: s·¥Ä·¥ç·¥á ·¥Äs `/tgm`.

**·¥áx·¥Ä·¥ç·¥ò ü·¥á:**
-  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ò ú·¥è·¥õ·¥è ·¥è Ä ·¥†…™·¥Ö·¥á·¥è ·¥°…™·¥õ ú `/tgm` ·¥õ·¥è ·¥ú·¥ò ü·¥è·¥Ä·¥Ö …™·¥õ.

**…¥·¥è·¥õ·¥á:**
 è·¥è·¥ú ·¥ç·¥ús·¥õ  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥á·¥Ö…™·¥Ä “ì…™ ü·¥á “ì·¥è Ä ·¥õ ú·¥á ·¥ú·¥ò ü·¥è·¥Ä·¥Ö ·¥õ·¥è ·¥°·¥è Ä·¥ã.
"""

__MODULE__ = "T·¥á ü·¥á…¢ Ä·¥Ä·¥ò ú"

#id#

from Spotify_Music import app
from pyrogram import filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

@app.on_message(filters.command("id"))
def ids(_, message):
    reply = message.reply_to_message
    if reply:
        button = InlineKeyboardButton("‚úØ ·¥Ñ ü·¥ès·¥á ‚úØ", callback_data="close")
        markup = InlineKeyboardMarkup([[button]])
        message.reply_text(
            f"User {reply.from_user.first_name} ID is : {reply.from_user.id}",
            reply_markup=markup
        )
    else:
        button = InlineKeyboardButton("‚úØ ·¥Ñ ü·¥ès·¥á ‚úØ", callback_data="close")
        markup = InlineKeyboardMarkup([[button]])
        message.reply(
           f"·¥õ ú…™s …¢ Ä·¥è·¥ú·¥©'s …™·¥Ö …™s: {message.chat.id}",
           reply_markup=markup
        )
        
